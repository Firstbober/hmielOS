import{s as c}from"./fs.373cbe91.js";let u=!1,l=[],d="";var i;(r=>{function a(e){if(!u)throw new Error("Cannot use syscalls, process isn't attached to hmielOS.");window.parent.postMessage(e,"*")}function t(e,...s){let n={key:l.length},o=new Promise((w,f)=>{n.promiseResolve=w,n.promiseReject=f});return l.push(n),a({type:"kernel.syscall."+e,data:[d,n.key,...s]}),o}r.syscalls={async processInit(e){return d=e,t("processInit",e)},async open(e,s,n,o){return t("open",e,s,n,o)},async close(e){return t("close",e)},async read(e,s,n){return t("read",e,s,n)},async write(e,s,n,o){return t("write",e,s,n,o)},async opendir(e){return t("opendir",e)},async readdir(e){return t("readdir",e)},async exec(e,s,n){return t("exec",e,s,n)}}})(i||(i={}));async function m(){const r=new Proxy(new URLSearchParams(window.location.search),{get:(a,t)=>a.get(t.toString())}).prockey;if(r==null)throw new Error("Cannot init libsys, maybe this isn't hmielOS?");window.addEventListener("message",a=>{const t=a.data;if(t.type==null&&t.data==null)return;const e=t;if(e.type.startsWith("kernel.syscall")){let s=l.at(e.data[0]);if(s==null||s.key!=e.data[0])return;let n=e.data;n.shift(),s.promiseResolve(n[0]),l.splice(e.data[0],1);return}}),u=!0,await i.syscalls.processInit(r)}i.syscalls;const y=new TextEncoder;var p;(r=>{async function a(...e){let s=e.join(" ");s=s.replaceAll(`
`,`\r
`),await i.syscalls.write(c.open.StdOut,y.encode(s+`\r
`),-1,0)}r.print=a;async function t(...e){let s=e.join(" ");s=s.replaceAll(`
`,`\r
`),await i.syscalls.write(c.open.StdOut,y.encode(s),-1,0)}r.printraw=t})(p||(p={}));export{p as a,m as l,i as s};
